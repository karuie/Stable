import pandas as pd
import numpy as np

data_2011 = pd.read_excel(
        "/Users/yiminyan/xxx.xls",sheet_name = "Weekly",index_col=None)
    # shape = data_2011.shape
data_2011 = data_2011.iloc[0:18,:]
data_2011 = data_2011.set_index("Weekly Average Prices for 2011")
data_2011_columns = data_2011.T.columns
total_df = pd.DataFrame(columns=data_2011_columns)
total_df

for single in list_xls:
    single_data_frame = pd.read_excel(file_dir+(single),sheet_name = "Weekly")
    single_data_frame = single_data_frame.iloc[0:18,:]
    single_data_frame.index = single_data_frame.iloc[:,0]
    single_data_frame = single_data_frame.iloc[:,1:len(single_data_frame.columns)-1]
#     single_data_frame = single_data_frame.set_index("Weekly Average Prices for 2011")
    single_data_frame = single_data_frame.T
    total_df = pd.concat([total_df, single_data_frame], axis=0)
    
total_df = total_df.rename(columns = {'Week Ended => ':"Date"})
total_df_new = total_df.reset_index(drop = True)

for i in range(len(total_df_new.index)):
    if i%2 == 0:
        j = i+1
        total_df_new["Date"][i]=total_df_new["Date"][j]

indexes= np.arange(0,1252,2).tolist()
total_df_indexed = total_df_new.iloc[indexes]
total_df_indexed.index = total_df_indexed["Date"]
total_df_indexed = total_df_indexed.iloc[:,1:len(total_df_indexed.columns)]

# generating daily indices 

# Fill value for all daily cell
full_index=pd.date_range(start="20000101",end="20221231",freq="D")
df_daily= total_df_indexed.reindex(full_index, fill_value=np.NaN)
#df_daily[df_daily.index.duplicated()]


# convert python object or special data type like datatime[ns] type to float64 type

df_daily[' Cow By-Product Input Values'] = df_daily[' Cow By-Product Input Values'].fillna(0)
df_daily[' Cow By-Product Input Values'] = df_daily[' Cow By-Product Input Values'].replace(0, np.nan)

df_daily.columns
for column in df_daily.columns:
    df_daily[column]=df_daily[column].astype(float)
    
    
# check result 
df_daily[df_daily[' Cow By-Product Input Values'].notnull()]
df_daily[df_daily.index.duplicated()]


# # generating monthly indices 
# monthly data
df_monthly=df_daily.resample("M").mean()

# write to a excel file with different sheets
with pd.ExcelWriter("xxx_Cleaned.xlsx") as writer:
    df_monthly.to_excel(writer,sheet_name="Indices Monthly")
    df_daily.to_excel(writer, sheet_name="Indices daily")
    
    
    
# duplicate rows cases
df = pd.read_excel("/Users/yiminyan/Stable/SIC_Cleaning/Stable_Nairobi_Maize_Feb2022.xlsx")
# use 'duplicated' not 'duplicate' to show the duplicated rows
df.shape
# (237, 5)
df[df.duplicated()]
n = len(df[df.duplicated()])
# 31
df_del_dup = df.drop_duplicates(subset=None, keep='first', inplace=False, ignore_index=False)

# select two specific columns
df_del_dup[['Date','Price']]

#Or use 
# df = pd.read_excel("/Users/yiminyan/Stable/SIC_Cleaning/Stable_Nairobi_Maize_Feb2022.xlsx")
# df = pd.DataFrame(df, columns = ["Date","Price"])


type(df_del_dup[['Date','Price']]
)
# pandas.core.frame.DataFrame

Date_Price_df = df_del_dup[['Date','Price']]
Date_Price_df[Date_Price_df.duplicated(subset="Date", keep='first')]
# 147	2014-01-29	391.8
# 391.8
# 391.797433398311
Date_Price_Del_DuplicatedDate_df = Date_Price_df.drop_duplicates(subset='Date', keep='first')
Date_Price_Del_DuplicatedDate_df.shape
# (205, 2)
df = Date_Price_Del_DuplicatedDate_df.set_index('Date')
type(Date_Price_Del_DuplicatedDate_df.index)
# pandas.core.indexes.numeric.Int64Index
df = df.set_index(pd.to_datetime(df.index))
type(df.index)
# pandas.core.indexes.datetimes.DatetimeIndex
full_index = pd.date_range(start="20000101", end="20221231", freq="D")
df_daily = df.reindex(full_index, fill_value=np.NaN)
df_daily

df_monthly = df_daily.resample("M").mean()
df_monthly
with pd.ExcelWriter("Stable_Nairobi_Maize_Feb2022_cleaned.xlsx") as writer:
    df_monthly.to_excel(writer, sheet_name="Indices")
    df_daily.to_excel(writer, sheet_name="Indices daily")
    



